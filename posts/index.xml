<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on gaurolog</title>
    <link>https://dimpu47.github.io/posts/</link>
    <description>Recent content in Blog on gaurolog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 22 Aug 2015 06:42:21 -0700</lastBuildDate>
    
	<atom:link href="https://dimpu47.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Operators in Go or Ansible.</title>
      <link>https://dimpu47.github.io/posts/k8s-operator/</link>
      <pubDate>Sun, 24 Feb 2019 15:07:32 +0530</pubDate>
      
      <guid>https://dimpu47.github.io/posts/k8s-operator/</guid>
      <description>Operators Operators makes it easy to incorporte ops knowledge in k8s native resource.
p.s: this is wip.</description>
    </item>
    
    <item>
      <title>Facade and Flyweight in Go.</title>
      <link>https://dimpu47.github.io/posts/facade-and-flyweight/</link>
      <pubDate>Fri, 22 Feb 2019 17:09:14 -0500</pubDate>
      
      <guid>https://dimpu47.github.io/posts/facade-and-flyweight/</guid>
      <description>Facade and Flyweight in Go. These are two data structral pattern in any application, I&amp;rsquo;ll be practing how to write them principles in Go.</description>
    </item>
    
    <item>
      <title>CSI - Container Storage Interface</title>
      <link>https://dimpu47.github.io/posts/storage-k8s/</link>
      <pubDate>Tue, 12 Feb 2019 17:09:14 -0500</pubDate>
      
      <guid>https://dimpu47.github.io/posts/storage-k8s/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Extending Kubernetes</title>
      <link>https://dimpu47.github.io/posts/extending-kubernetes/</link>
      <pubDate>Sat, 02 Feb 2019 17:09:14 -0500</pubDate>
      
      <guid>https://dimpu47.github.io/posts/extending-kubernetes/</guid>
      <description>How do you extend k8s or why would you want to ? Answering the why is easy, because it allows you to create custom resources, reconciliation loop to control or manage it according to your own rules and expertise on your own custom resource.
the how? will take a bit longer and will be covered in this article.
Basically you would have done these things:
 Create a custom object in K8s.</description>
    </item>
    
    <item>
      <title>Isomorphic Go.</title>
      <link>https://dimpu47.github.io/posts/isomorphic-go/</link>
      <pubDate>Sat, 19 Jan 2019 15:07:32 +0530</pubDate>
      
      <guid>https://dimpu47.github.io/posts/isomorphic-go/</guid>
      <description>Sharing is caring is a cliche but not when is comes to webapps.
 Isomorphic web applications are becoming popular and accepted methodology by many in the Game. in dictionary terms, it means something of the corresponding or similar form or relations.
Hmm&amp;hellip; wth! I know&amp;hellip;
what is isomorphic, though? isomorphic webapps are when server and client share some common data with each other and thus correspond/relate to each other inorder to deliver quicker, providing better user experience, improved discovery via search engines, and reduced ops since parts of code is shared b/w both parties.</description>
    </item>
    
    <item>
      <title>Horizontal Pod Autoscaler.</title>
      <link>https://dimpu47.github.io/posts/k8s-hpa/</link>
      <pubDate>Mon, 19 Nov 2018 15:07:32 +0530</pubDate>
      
      <guid>https://dimpu47.github.io/posts/k8s-hpa/</guid>
      <description>Horizontal Pod Autoscaler - HPA HorizaontalPodAutoscaler is a Kubernetes Resource that automatically scales Pod Replicas managed by a Controller. This automaic scaling is performed by Horizontal Controllers, which is enabled and configured by creating a HorizontalPodAutoscaler(HPA) Resource. The Controller periodically checks pod metrics, calculates the no. of replicas required to meet the target value configured in HPA resource and adjust/update replica field on target resource i.e. Deployment, ReplicaSet, StatefulSet, ReplicationController.</description>
    </item>
    
    <item>
      <title>Sniffing in Go.</title>
      <link>https://dimpu47.github.io/posts/sniffing-in-go/</link>
      <pubDate>Sun, 02 Sep 2018 17:09:14 -0500</pubDate>
      
      <guid>https://dimpu47.github.io/posts/sniffing-in-go/</guid>
      <description></description>
    </item>
    
    <item>
      <title>systems programming in Go.</title>
      <link>https://dimpu47.github.io/posts/go-systems-programming/</link>
      <pubDate>Sat, 25 Aug 2018 17:09:14 -0500</pubDate>
      
      <guid>https://dimpu47.github.io/posts/go-systems-programming/</guid>
      <description>why golang for systems programming&amp;hellip; ? .
 Go was written by google as famously sited many times over the internet. Some of the people involved in development of Golang are working professionals at Google, who were also involved with many Unix &amp;amp; C developments, and they developed Golang because of increasing complex demands of System Engineering at google, and C was becoming hard to maintain.
Go&amp;rsquo;s concurrency model is built upon CSP - Communicating Sequencial Processes  Where values are shared b/w independent activities or goroutines but variables are, for the most part, confined to single activity.</description>
    </item>
    
    <item>
      <title>websockets in Go.</title>
      <link>https://dimpu47.github.io/posts/go-websockets/</link>
      <pubDate>Mon, 25 Jun 2018 17:09:14 -0500</pubDate>
      
      <guid>https://dimpu47.github.io/posts/go-websockets/</guid>
      <description>Websockets are way of providing full-duplex communication b/w client and server with lower overheads. URI schemes ws or wss is a websocket (unencrypted) or websocket secure (encrypted) protocol respectively. It&amp;rsquo;s designed to work over HTTP port 80 or 443 to support HTTP Proxies and Intermediaries.
When establishing connection, client sends an HTTP Upgrade Header to switch from HTTP protocol to WebSocket protocol. Communications i.e. exchange of data or byte streams are dealt by TCP alone.</description>
    </item>
    
  </channel>
</rss>